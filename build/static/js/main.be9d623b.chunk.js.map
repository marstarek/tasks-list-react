{"version":3,"sources":["components/Header/Button.jsx","components/Header/Header.jsx","components/Header/Task.jsx","components/Header/Tasks.jsx","components/Header/Addtask.jsx","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","cursor","id","onDoubleClick","day","Tasks","tasks","map","Addtask","useState","settext","setday","setreminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setshowAddTask","settasks","console","log","Math","floor","random","newtask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be9d623b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst Button = ({ color, text, onClick }) => {\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      style={{ backgroundColor: color }}\r\n      className=\"btn\"\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\nButton.defaultProps = {\r\n  color: \"steelblue\",\r\n};\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  color: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n};\r\nexport default Button;\r\n","import React from \"react\";\r\nimport Button from \"./Button\";\r\nconst Header = ({ onAdd, showAdd }) => {\r\n  return (\r\n    <header className=\"header\">\r\n      <Button\r\n        color={showAdd ? \"red\" : \"green\"}\r\n        text={showAdd ? \"close\" : \"add\"}\r\n        onClick={onAdd}\r\n      />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { FaTimes } from \"react-icons/fa\";\r\nimport React from \"react\";\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n  return (\r\n    <div className={`task ${task.reminder ? \"reminder\" : \"\"}`}>\r\n      <h3>\r\n        {task.text}{\" \"}\r\n        <FaTimes\r\n          style={{ color: \"red\", cursor: \"pointer\" }}\r\n          onClick={() => onDelete(task.id)}\r\n          onDoubleClick={() => onToggle(task.id)}\r\n        />\r\n      </h3>\r\n      <p>{task.day}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React from \"react\";\r\nimport Task from \"./Task\";\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n  return (\r\n    <>\r\n      {tasks.map((task) => (\r\n        <Task\r\n          key={task.id}\r\n          task={task}\r\n          onDelete={onDelete}\r\n          onToggle={onToggle}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nconst Addtask = ({ onAdd }) => {\r\n  const [text, settext] = useState(\"\");\r\n  const [day, setday] = useState(\"\");\r\n  const [reminder, setreminder] = useState(false);\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!text) {\r\n      alert(\"its not text \");\r\n      return;\r\n    }\r\n    onAdd({ text, day, reminder });\r\n    settext(\"\");\r\n    setday(\"\");\r\n    setreminder(false);\r\n  };\r\n  return (\r\n    <form className=\"add-form\" onSubmit={onSubmit}>\r\n      <div className=\"form-control\">\r\n        <label>Tasks</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"add task\"\r\n          value={text}\r\n          onChange={(e) => settext(e.target.value)}\r\n        ></input>\r\n      </div>\r\n      <div className=\"form-control\">\r\n        <label>day</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"add day\"\r\n          value={day}\r\n          onChange={(e) => setday(e.target.value)}\r\n        ></input>\r\n      </div>\r\n      <div className=\"form-control form-control-check\">\r\n        <label>reminder</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={reminder}\r\n          placeholder=\"add task\"\r\n          value={reminder}\r\n          onChange={(e) => setreminder(e.currentTarget.checked)}\r\n        ></input>\r\n      </div>\r\n      <button type=\"submit\" value=\"savetask\" className=\"btn btn-block\">\r\n        Save Task\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Addtask;\r\n","import \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport Tasks from \"./components/Header/Tasks\";\nimport Addtask from \"./components/Header/Addtask\";\n\nimport { useState } from \"react\";\nfunction App() {\n  const [showAddTask, setshowAddTask] = useState(false);\n  const [tasks, settasks] = useState([\n    {\n      id: 1,\n      text: \"food shopping\",\n      day: \"feb 1th at 2:15 pm\",\n      reminder: true,\n    },\n    {\n      id: 2,\n      text: \"food shiting\",\n      day: \"feb 5th at 5:15 pm\",\n      reminder: true,\n    },\n    {\n      id: 3,\n      text: \"no shopping\",\n      day: \"march 10th at 10:15 pm\",\n      reminder: true,\n    },\n  ]);\n  //add task\n  const addTask = (task) => {\n    console.log(task);\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newtask = { id, ...task };\n\n    settasks([...tasks, newtask]);\n    console.log(newtask);\n  };\n  const deleletTask = (id) => {\n    settasks(tasks.filter((task) => task.id !== id));\n  };\n  //toggle reminder\n  const toggleremainder = (id) => {\n    console.log(id);\n    settasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <Header\n        onAdd={() => setshowAddTask(!showAddTask)}\n        showAdd={showAddTask}\n      />\n      {showAddTask && <Addtask onAdd={addTask} />}\n      {tasks.length > 0 ? (\n        <Tasks\n          tasks={tasks}\n          onDelete={deleletTask}\n          onToggle={toggleremainder}\n        />\n      ) : (\n        \"No Tasks To Show\"\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}